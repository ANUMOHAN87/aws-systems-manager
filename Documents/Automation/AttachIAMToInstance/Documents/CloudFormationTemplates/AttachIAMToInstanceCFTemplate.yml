---
AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  LambdaRoleArn:
    Description: >
      The ARN of the role that allows Lambda created by Automation to perform the action on your behalf
    Type: String
    Default: ""
  LambdaName:
    Description: >
      The lambda function name
    Type: String
Conditions:
  LambdaAssumeRoleNotSpecified:
    !Or
      - !Equals [!Ref LambdaRoleArn, '']
      - !Equals [!Ref LambdaRoleArn, 'undefined']
Resources:
  # Assume role used by the lambda function (only created if not passed in)
  LambdaRole:
    Type: AWS::IAM::Role
    Condition: LambdaAssumeRoleNotSpecified
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: ["sts:AssumeRole"]
            Effect: "Allow"
            Principal:
              Service:
                - lambda.amazonaws.com
      Policies:
        - PolicyName: AttachIAMToInstanceLambdaPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              Action:
                - ec2:AssociateIamInstanceProfile
                - ec2:DescribeIamInstanceProfileAssociations
                - ec2:DisassociateIamInstanceProfile
                - iam:AddRoleToInstanceProfile
                - iam:CreateInstanceProfile
                - iam:ListInstanceProfilesForRole
                - iam:PassRole
              Effect: Allow
              Resource: "*"
      Path: "/"
  AttachIAMToInstanceLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: "{}"
      FunctionName: !Ref LambdaName
      Role: !If ["LambdaAssumeRoleNotSpecified", !GetAtt LambdaRole.Arn, !Ref LambdaRoleArn]
      Timeout: 60
      Handler: "index.handler"
      Runtime: python2.7
      MemorySize: 128
